<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IAgCAIAgCAIAgCAIAgCAIAgCAIAg/9k=
</value>
  </data>
</root>